<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bobo&#39;s site</title>
  
  <subtitle>Bobo</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bobotheknight.github.io/"/>
  <updated>2023-07-12T20:46:10.165Z</updated>
  <id>https://bobotheknight.github.io/</id>
  
  <author>
    <name>BoboTheKnight</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>new_title</title>
    <link href="https://bobotheknight.github.io/2023/07/12/new-title/"/>
    <id>https://bobotheknight.github.io/2023/07/12/new-title/</id>
    <published>2023-07-12T20:33:05.000Z</published>
    <updated>2023-07-12T20:46:10.165Z</updated>
    
    <content type="html"><![CDATA[<p>test my picture</p><div class="justified-gallery"><br><br><img src="..%2Fgallery%2Fnew-title%2Fcompare.png" alt="compare.png"><img src="compare.png" alt="compare.png"><br><img src="..%2Fgallery%2Fnew-title%2Fnested_set_1_number.png" alt="nested_set_1_number.png"><br><img src="..%2Fgallery%2Fnew-title%2Fnested_set_model.png" alt="nested_set_model.png"><br><img src="..%2Fgallery%2Fnew-title%2Fnested_set_tree_directory.png" alt="nested_set_tree_directory.png"><br><br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;test my picture&lt;/p&gt;
&lt;div class=&quot;justified-gallery&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;..%2Fgallery%2Fnew-title%2Fcompare.png&quot; alt=&quot;compare.png&quot;&gt;&lt;img src=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Implementation of nested set design of SQL with Java - Nested Set Modified Preorder Tree Traversal</title>
    <link href="https://bobotheknight.github.io//implement-SQL-nested-sets-in-Java-en/"/>
    <id>https://bobotheknight.github.io//implement-SQL-nested-sets-in-Java-en/</id>
    <published>2022-03-28T16:00:00.000Z</published>
    <updated>2023-07-12T20:28:53.475Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://bobotheknight.github.io/zh-CN/implement-SQL-nested-sets-in-Java-zh/"><i class="fa-solid fa-language"></i>   简体中文</a></p><!-- TOC --><ul><li><a href="#preface">Preface</a></li><li><a href="#nested-set-model">Nested Set Model</a></li><li><a href="#implemented-in-java">Implemented in Java</a><ul><li><a href="#mysql-table-design">MySQL Table Design</a></li><li><a href="#constructing-mapping-entities">Constructing mapping entities</a></li><li><a href="#data-number-entry">Data number entry</a></li><li><a href="#query-data-based-on-business-requirements">Query data based on business requirements</a></li><li><a href="#extended-query-statements">Extended Query Statements</a></li><li><a href="#note">Note</a><!-- TOC --></li></ul></li></ul><h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><p>Recently, we got a requirement for storage directories and files，the condition is,</p><ol><li>Input parameter is the path of the root directory which was unpacked. </li><li>The files will not change nor update after unpacked.</li></ol><p>The details of the requirement is,</p><ol><li>The directories and all its subdirectories and sub-files need to be parsed into a tree structure response to the front end.</li><li>When the user clicks on each level of directory, we need to get the files in this directory and all its subdirectories for some business data statistics.</li><li>We can only use the MySQL.(Can’t use a graph database.)</li></ol><!-- more --><p>After <a href="https://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database">research</a>, the found that <a href="http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/">nested set design</a> is well suited for such a scenario.<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Note - If graph databases are used in the project, graph databases are a better choice for handling complex hierarchical data.</span><br></pre></td></tr></table></figure></p><p>It is hard to find ready-made code on the Internet that uses Java to implement this, and only found a <a href="https://github.com/eXsio/nestedj">project</a> on github that implements part of the functionality. However, this project does not support MyBatis and I do not plan to adopt it, so I can only implement the nested set design by myself.</p><p>This article will briefly introduce the Nested Set Model Nested Set Model, details of how to use Java, from the table to the library to implement the nested set model.</p><p>The examples in this article use <code>MySQL 8.0</code>, <code>JDK 8</code>.</p><hr><h2 id="Nested-Set-Model"><a href="#Nested-Set-Model" class="headerlink" title="Nested Set Model"></a>Nested Set Model</h2><p>When faced with hierarchically structured data stores, such as catalogs, ! <a href="... /... /... /... /... /resources/nested_set/nested_set_tree_directory.png">catalog storage</a></p><p>We tend to use the scheme known as the <strong>neighboring table model</strong> with table field designs of approx:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id, name, parentId</span><br></pre></td></tr></table></figure><br>In the adjacency table, all data has a <code>parentId</code> field to store its parent node ID. if the current node is the root node, its parent node is <code>NULL</code> or <code>-1</code>. When traversing, you can use recursion to query the whole tree, but also easy to query the next level of nodes. It is also easy to add and delete. However, when the amount of data is large, querying the whole tree will affect performance, and even lead to memory overflow.<br>Therefore, in use, we usually use lazy loading to show the data one level at a time. Or limit the depth of the recursion to show only part of the data.</p><p>If the known data additions, deletions and changes are rare, the query performance requirements are relatively high, and like our needs, we need to check all the leaf nodes under a node, you can consider using the nested set model. The design of the nested set model is approximately:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id, name, left_index, right_index, depth</span><br></pre></td></tr></table></figure><br>In other words, this views the individual nodes as individual containers, with the child nodes inside the parent node and all nodes in the root node; represented in a picture as follows:<br><img src="../../../../../resources/nested_set/nested_set_model.png" alt="nested_set_model"></p><p>Then numbered from left to right, each container has a left and right two numbers, that is, for the <code>left</code> and <code>right</code>; represented by the picture as follows:<br><img src="../../../../../resources/nested_set/nested_set_1_number.png" alt="nested_set_1_number"></p><p>To make it easier to query the next level node and other nodes, a depth field can be added to indicate the depth.<br>At this point, the left and right values of each node can be obtained.<br>Below are just a few of the most commonly used SQLs. Other SQLs can be found in <a href="http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/">Managing Hierarchical Data in MySQL</a>.</p><hr><h2 id="Implemented-in-Java"><a href="#Implemented-in-Java" class="headerlink" title="Implemented in Java"></a>Implemented in Java</h2><h3 id="MySQL-Table-Design"><a href="#MySQL-Table-Design" class="headerlink" title="MySQL Table Design"></a>MySQL Table Design</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `file_nested_sets_demo` (</span><br><span class="line">  `id` varchar(100) NOT NULL COMMENT &#x27;Document ID，unique identifier&#x27;,</span><br><span class="line">  `path` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT &#x27;Full path of the file&#x27;,</span><br><span class="line">  `type` varchar(100) DEFAULT NULL COMMENT &#x27;Document type; Directory,File&#x27;,</span><br><span class="line">  `size` double DEFAULT NULL COMMENT &#x27;file size&#x27;,</span><br><span class="line">  `tree_id` bigint DEFAULT NULL,</span><br><span class="line">  `left_index` bigint NOT NULL,</span><br><span class="line">  `right_index` bigint NOT NULL,</span><br><span class="line">  `depth` bigint NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_tree_id_indexes` (`tree_id`,`left_index`,`right_index`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT=&#x27;文件嵌套集表示例&#x27;;</span><br></pre></td></tr></table></figure><h3 id="Constructing-mapping-entities"><a href="#Constructing-mapping-entities" class="headerlink" title="Constructing mapping entities"></a>Constructing mapping entities</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Nested set objects used by the deposit database</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileNestedSetsDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Document ID, unique identification</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Full path of the file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String path;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Document type; FILE/DIRECTORY</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * file size</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Double size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long treeId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long leftIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long rightIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long depth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Data-number-entry"><a href="#Data-number-entry" class="headerlink" title="Data number entry"></a>Data number entry</h3><p>The input data is known to be a file path, and the path structure is the same as in the above figure, for example:<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">|== means folder; |-- means file.</span><br><span class="line"></span><br><span class="line"> |==resources</span><br><span class="line">            |==data</span><br><span class="line">                  |--table_design</span><br><span class="line">            |==mapper</span><br><span class="line">                  |==server</span><br><span class="line">                        |--ServerMapper.xml</span><br><span class="line">                  |==source</span><br><span class="line">                  |--AMapper.xml</span><br><span class="line">            |--bootstrap.properties</span><br><span class="line">            |--logback-spring.xml</span><br></pre></td></tr></table></figure></p><p>The expected output is:<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">depth   left_index|||path|||right_index</span><br><span class="line">0   1|||\resources|||20</span><br><span class="line">1   2|||\resources\data||5</span><br><span class="line">2   3|||\resources\data\table_design|||4</span><br><span class="line">1   6|||\resources\mapper|||15</span><br><span class="line">2   7|||\resources\mapper\server|||10</span><br><span class="line">3   8|||\resources\mapper\server\ServerMapper.xml|||9</span><br><span class="line">2   11|||\resources\mapper\source|||12</span><br><span class="line">2   13|||\resources\mapper\AMapper.xml|||14</span><br><span class="line">1   16|||\resources\bootstrap.properties|||17</span><br><span class="line">1   18|||\resources\logback-spring.xml|||19</span><br></pre></td></tr></table></figure></p><p>We can construct the data using the <code>precedence traversal algorithm</code>, traversing its children and assigning values from left to right, one layer at a time.<br>The following code uses a depth-first approach to traverse the directory and assign values, returning Map.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NestedSetsUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *Use depth-first traversal of the catalog to return Map, which is used to support nested set initial entry.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> root Directories to be traversed</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Map&lt;File, NestedSetObj&gt;</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;File, NestedSetObj&gt; <span class="title function_">dfs2NestedSets</span><span class="params">(File root)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Record Depth -1 per stack out, +1 per stack in.</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">depth</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line">        <span class="comment">// left and right values</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">        Deque&lt;File&gt; stack = <span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;&gt;();</span><br><span class="line">        stack.push(root);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// A global collection of objects that also indicates whether this object has been on the stack.</span></span><br><span class="line">        Map&lt;File, NestedSetObj&gt; map = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// root directory </span></span><br><span class="line">        <span class="type">NestedSetObj</span> <span class="variable">rootObj</span> <span class="operator">=</span> NestedSetObj.builder().path(root.getAbsolutePath()).depth(depth).left(index++).build();</span><br><span class="line">        map.put(root, rootObj);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">cur</span> <span class="operator">=</span> stack.pop();</span><br><span class="line">            depth--;</span><br><span class="line">            File[] files = cur.listFiles();</span><br><span class="line">            <span class="keyword">if</span> (files != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (File next : files) &#123;</span><br><span class="line">                    <span class="comment">// if the next node hasn&#x27;t been visited before</span></span><br><span class="line">                    <span class="keyword">if</span> (!map.containsKey(next)) &#123;</span><br><span class="line">                        <span class="comment">//Stack the current and the next nodes</span></span><br><span class="line">                        depth++;</span><br><span class="line">                        stack.push(cur);</span><br><span class="line">                        depth++;</span><br><span class="line">                        stack.push(next);</span><br><span class="line">                        <span class="comment">// Assign left value to node on first visit</span></span><br><span class="line">                        <span class="type">NestedSetObj</span> <span class="variable">obj</span> <span class="operator">=</span> NestedSetObj.builder().left(index++).path(next.getAbsolutePath()).depth(depth).build();</span><br><span class="line">                        <span class="type">boolean</span> <span class="variable">leaf</span> <span class="operator">=</span> !next.isDirectory();</span><br><span class="line">                        <span class="type">boolean</span> <span class="variable">emptyDirLeaf</span> <span class="operator">=</span> next.listFiles() != <span class="literal">null</span> &amp;&amp; next.listFiles().length == <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">//Assign right value to leaf node or empty directory.</span></span><br><span class="line">                        <span class="keyword">if</span> (leaf || emptyDirLeaf) &#123;</span><br><span class="line">                            obj.setRight(index++);</span><br><span class="line">                        &#125;</span><br><span class="line">                        map.put(next, obj);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Determine whether the leaf node&#x27;s right needs to be assigned a value;</span></span><br><span class="line">                <span class="comment">//The current directory can only be assigned a value if all the data in all the child levels have a RIGHT value.                long min = Long.MAX_VALUE;</span></span><br><span class="line">                <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">                    <span class="type">NestedSetObj</span> <span class="variable">childObject</span> <span class="operator">=</span> map.get(file);</span><br><span class="line">                    <span class="keyword">if</span> (childObject == <span class="literal">null</span>) &#123;</span><br><span class="line">                        min = <span class="number">0L</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    min = Math.min(min, childObject.getRight());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Assign a value to the right of a non-leaf node.</span></span><br><span class="line">                <span class="comment">// When the first-level child nodes all have a right value, index+1 is the current node&#x27;s right value.                if (min &gt; 0L &amp;&amp; Long.MAX_VALUE != min) &#123;</span></span><br><span class="line">                <span class="keyword">if</span> (min &gt; <span class="number">0L</span> &amp;&amp; Long.MAX_VALUE != min) &#123;</span><br><span class="line">                    <span class="type">NestedSetObj</span> <span class="variable">curObj</span> <span class="operator">=</span> map.get(cur);</span><br><span class="line">                    <span class="keyword">if</span> (curObj.right == <span class="number">0L</span>) &#123;</span><br><span class="line">                        curObj.setRight(index++);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Right value of root = nodes * 2</span></span><br><span class="line">        rootObj.setRight(map.size() * <span class="number">2L</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  Document nested set of objects, business-agnostic</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">NestedSetObj</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> left;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> right;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> depth;</span><br><span class="line">        <span class="keyword">private</span> String path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then just traverse the data from the <code>NestedSetsUtil#dfs2NestedSets()</code> response, assign it to <code>FileNestedSetsDemo</code>, and batch into the library.</p><h3 id="Query-data-based-on-business-requirements"><a href="#Query-data-based-on-business-requirements" class="headerlink" title="Query data based on business requirements"></a>Query data based on business requirements</h3><ul><li><p>Retrieve all child nodes of type file under a single path</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> node.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> file_nested_sets_demo <span class="keyword">AS</span> node,</span><br><span class="line">     file_nested_sets_demo <span class="keyword">AS</span> parent</span><br><span class="line"><span class="keyword">WHERE</span>  node.depth <span class="operator">=</span> parent.depth <span class="operator">+</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">AND</span> node.left_index  <span class="operator">&gt;</span> parent.left_index</span><br><span class="line">    <span class="keyword">AND</span> node.right_index <span class="operator">&lt;</span> parent.right_index</span><br><span class="line">    <span class="keyword">AND</span> node.tree_id <span class="operator">=</span> <span class="number">1</span>  </span><br><span class="line">    <span class="keyword">AND</span> parent.path <span class="operator">=</span> <span class="string">&#x27;\resources\mapper&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> node.type <span class="operator">=</span> <span class="string">&#x27;FILE&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> parent.left_index</span><br></pre></td></tr></table></figure></li><li><p>Retrieve all child nodes under a single tree</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> node.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> file_nested_sets_demo <span class="keyword">AS</span> node</span><br><span class="line"><span class="keyword">WHERE</span> node.tree_id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> node.left_index</span><br></pre></td></tr></table></figure></li></ul><h3 id="Extended-Query-Statements"><a href="#Extended-Query-Statements" class="headerlink" title="Extended Query Statements"></a>Extended Query Statements</h3><ul><li>Retrieve direct child nodes under a single path</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> node.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> file_nested_sets_demo <span class="keyword">AS</span> node,</span><br><span class="line">     file_nested_sets_demo <span class="keyword">AS</span> parent</span><br><span class="line"><span class="keyword">WHERE</span> node.depth <span class="operator">=</span> parent.depth <span class="operator">+</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">AND</span> node.left_index  <span class="operator">&gt;</span> parent.left_index</span><br><span class="line">    <span class="keyword">AND</span> node.right_index <span class="operator">&lt;</span> parent.right_index</span><br><span class="line">    <span class="keyword">AND</span> node.tree_id <span class="operator">=</span> <span class="number">1</span>  </span><br><span class="line">    <span class="keyword">AND</span> parent.path <span class="operator">=</span> <span class="string">&#x27;\resources\mapper&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> parent.left_index</span><br></pre></td></tr></table></figure><hr><h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><p>The Java algorithms that can be executed can be found in <a href="https://github.com/BoboTheKnight/NestedSetDemo">GitHub</a></p>]]></content>
    
    <summary type="html">
    
      This article will briefly introduce the Nested Set Model Nested Set Model, details of how to use Java, from the table to the library to implement the nested set model.
    
    </summary>
    
      <category term="Technology" scheme="https://bobotheknight.github.io/categories/Technology/"/>
    
      <category term="Backend" scheme="https://bobotheknight.github.io/categories/Technology/Backend/"/>
    
      <category term="System Design" scheme="https://bobotheknight.github.io/categories/Technology/System-Design/"/>
    
      <category term="Project Experience" scheme="https://bobotheknight.github.io/categories/Technology/Project-Experience/"/>
    
    
      <category term="SQL" scheme="https://bobotheknight.github.io/tags/SQL/"/>
    
      <category term="Java" scheme="https://bobotheknight.github.io/tags/Java/"/>
    
      <category term="Tree traversal" scheme="https://bobotheknight.github.io/tags/Tree-traversal/"/>
    
      <category term="Project Experience" scheme="https://bobotheknight.github.io/tags/Project-Experience/"/>
    
      <category term="System Design" scheme="https://bobotheknight.github.io/tags/System-Design/"/>
    
  </entry>
  
  <entry>
    <title>Single Node ElasticSearch and Kibana Installation Instructions</title>
    <link href="https://bobotheknight.github.io//single-node-elasticsearch-and-kibana-installation-instructions-en/"/>
    <id>https://bobotheknight.github.io//single-node-elasticsearch-and-kibana-installation-instructions-en/</id>
    <published>2021-12-02T17:00:00.000Z</published>
    <updated>2023-07-12T19:15:14.651Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://bobotheknight.github.io/zh-CN/single-node-elasticsearch-and-kibana-installation-instructions-zh/"><i class="fa-solid fa-language"></i>   简体中文</a></p><!-- TOC --><ul><li><a href="#summary">Summary</a></li><li><a href="#setup-es">Setup ES</a></li><li><a href="#install-kibana">Install Kibana</a></li><li><a href="#configure-permissions--run-local-cluster-using-username-and-password-authentication-">Configure permissions (run local cluster using username and password authentication)</a></li><li><a href="#appendix">Appendix</a><!-- TOC --></li></ul><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>To support the new features, we have added ES nodes. You can configure ES as a single node or cluster depending on the data situation and status; enable Xpack, enable permission authentication (requires Kibana installation).<br>The official documentation Set up Elasticsearch has installation instructions for each OS, <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.3/install-elasticsearch.html">Installing Elasticsearch</a> page provides links to instructions for various installation packages, which can be consulted. This document provides instructions for installing ES and Kibana on a single-node Linux server.<br><span id="more"></span></p><h2 id="Setup-ES"><a href="#Setup-ES" class="headerlink" title="Setup ES"></a>Setup ES</h2><ol><li><p>First make sure you have a JDK in your environment. Elasticsearch 7.x package includes the OpenJDK11 package, if you need to use your own version, refer to the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html">official documentation</a> to set the JAVA_HOME environment variable.</p></li><li><p>Create an ES-specific user, as it is not possible to start with <em>root</em> user.</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd elasticsearch</span><br></pre></td></tr></table></figure><p>Create the ES directory and grant permissions to the <em>elasticsearch</em> user.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home</span><br><span class="line">mkdir /es</span><br><span class="line">chown -R elasticsearch:elasticsearch /home/es/</span><br></pre></td></tr></table></figure></li><li><p>Upload <strong>elasticsearch-7.14.0-linux-x86_64.tar.gz</strong> in the zip archive, or you can go to the <a href="https://www.elastic.co/cn/downloads/elasticsearch">official website</a> to download it or use other methods to download it.</p></li><li><p>Unpacked:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf elasticsearch-7.14.0-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>Modify the configuration file and go to the unpacked directory:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd elasticsearch-7.14.0/config</span><br></pre></td></tr></table></figure><p>First backup the configuration file <strong>elasticsearch.yml</strong>, and then modify:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cp elasticsearch.yml elasticsearch.yml.bak </span><br><span class="line">vim elasticsearch.yml</span><br><span class="line">------------------------------</span><br><span class="line">network.host: $&#123;ip of this server&#125;</span><br><span class="line">http.port: 9200</span><br><span class="line">discovery.seed_hosts: [&quot;$&#123;ip of this server&#125;&quot;]</span><br><span class="line">discovery.type: single-node # single-node mode</span><br><span class="line">------------------------------</span><br></pre></td></tr></table></figure></li><li><p>Open ports of 9200 and 9300, or turn off the firewall.</p></li><li><p>According to the configuration file, create the data directory to store es data.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure></li><li><p>Give the ES user all ES-related permissions; switch to the <em>elasticsearch</em> user; start ES in the bin directory:</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chown -R elasticsearch:elasticsearch ./*</span><br><span class="line">su – elasticsearch</span><br><span class="line">cd /home/es/elasticsearch-7.14.0/bin</span><br><span class="line">./elasticsearch &amp;   </span><br></pre></td></tr></table></figure><p>You may get an error after startup:</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">trying to update state on non-existing task geoip-downloader</span><br><span class="line">[ERROR][o.e.i.g.GeoIpDownloader ] [18789989a729] error updating geoip database [GeoLite2-Country.mmdb]</span><br></pre></td></tr></table></figure><p>This error can be ignored; to resolve it, see <a href="#Appendix">Appendix 1. Resolving ES Startup Error Reporting</a>.</p></li><li><p>Verify startup by running locally:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://$&#123;ip&#125;:9200/</span><br></pre></td></tr></table></figure><p>The return result is as follows.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;localhost.localdomain&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cluster_name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;oss-es&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cluster_uuid&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;HKCnF4l_TOSW8-mznxM5eg&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;number&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;7.14.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_flavor&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;tar&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_hash&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_date&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2021-07-29T20:49:32.864135063Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_snapshot&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lucene_version&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;8.9.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minimum_wire_compatibility_version&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;6.8.0&quot;</span><span class="punctuation">,</span>  </span><br><span class="line">    <span class="attr">&quot;minimum_index_compatibility_version&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tagline&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>That is success!<br>Try again to access http://${ip}:9200/ through your browser with the same response successful result.  If you can’t access it, check the firewall.</p></li></ol><hr><h2 id="Install-Kibana"><a href="#Install-Kibana" class="headerlink" title="Install Kibana"></a>Install Kibana</h2><ol><li><p>Refer to the <a href="https://www.elastic.co/guide/en/kibana/current/targz.html">official website</a> for the installation procedure; or follow these steps:</p></li><li><p>Using the <em>root</em> user, upload the <strong>kibana-7.14.0-linux-x86_64.tar.gz</strong> in the zip file and extract it.</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf kibana-7.14.0-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>Go to the directory and backup the configuration file <strong>kibana.yml</strong> and modify this:</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd kibana-7.14.0-linux-x86_64/config/</span><br><span class="line">cp kibana.yml kibana.yml.bak</span><br><span class="line">vim kibana.yml </span><br><span class="line">------------------------------</span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: &quot;$&#123;ip of this server&#125;&quot;</span><br><span class="line">elasticsearch.hosts: [&quot;http://$&#123;IP of the ES service&#125;:9200&quot;]</span><br><span class="line">elasticsearch.username: &quot;kibana_system&quot;</span><br><span class="line">------------------------------</span><br></pre></td></tr></table></figure></li><li><p>Go to the /bin directory and start,</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ../bin</span><br><span class="line">./kibana</span><br></pre></td></tr></table></figure><p>The interface prints a log and is successful when it finally appears as shown below!</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Kibana is now available</span><br></pre></td></tr></table></figure><p>It can be accessed through a browser <code>http://ip:5601</code>.</p></li></ol><h2 id="Configure-permissions-run-local-cluster-using-username-and-password-authentication"><a href="#Configure-permissions-run-local-cluster-using-username-and-password-authentication" class="headerlink" title="Configure permissions (run local cluster using username and password authentication)"></a>Configure permissions (run local cluster using username and password authentication)</h2><ol><li><p>You can refer to the official website <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.14/security-minimal-setup.html">Minimum Security Settings</a>.</p></li><li><p>Stop Kibana and Elasticsearch (if they are running).</p></li><li><p>Add the <code>xpack.security.enabled</code> setting to the <strong>$ES_PATH_CONF/elasticsearch.yml</strong> file and set the value to true.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> cd /home/es/elasticsearch-7.14.0/config</span><br><span class="line"> vim elasticsearch.yml</span><br><span class="line">----- add the following information ----          </span><br><span class="line">xpack.security.enabled:true</span><br><span class="line">----------------------------------------</span><br></pre></td></tr></table></figure><p><em>Tips:This $ES_PATH_CONF variable is the path to the Elasticsearch configuration file. If you installed Elasticsearch using an archive distribution (zip or tar.gz), the variable defaults to $ES_HOME/config. If you are using a package distribution (Debian or RPM), the variable defaults to /etc/elasticsearch.</em>.</p></li><li><p>Start ES and wait for it to start successfully.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ../bin</span><br><span class="line">./elasticsearch</span><br></pre></td></tr></table></figure></li><li><p>Open another terminal window, go to the ES directory, and enable the Configuration Password Tool by executing the command</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure><p>Execute the command and follow the command line prompts to configure passwords.</p></li><li><p>Configure Kibana to connect to Elasticsearch with a password, create a Kibana keystore, and add security settings:</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd kibana-7.14.0-linux-x86_64/</span><br><span class="line"> ./bin/kibana-keystore create</span><br><span class="line"> ./bin/kibana-keystore add elasticsearch.password</span><br></pre></td></tr></table></figure><p>When prompted, enter the password for the <em>kibana_system</em> user.</p></li><li><p>Restart Kibana and log in to Kibana as the <em>elastic</em> user in your browser at “http://${kibanaIp}:5601”.</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/kibana</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><ol><li>Resolving ES startup errors<ol><li>Refer to <a href="https://discuss.elastic.co/t/how-to-disable-geoip-usage-in-7-14-0/281076">How to disable geoip usage in 7.14.0</a><br>Option: Use cluster settings API instead of elasticsearch.yml; i.e., after installing Kibana, run<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT _cluster/settings</span><br><span class="line">&#123;</span><br><span class="line">    &quot;persistent&quot;: &#123;</span><br><span class="line">       &quot;ingest.geoip.downloader.enabled&quot;: false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://bobotheknight.github.io/zh-CN/single-node-elasticsearch-and-kibana-installation-instructions-zh/&quot;&gt;&lt;i class=&quot;fa-solid fa-language&quot;&gt;&lt;/i&gt;   简体中文&lt;/a&gt;&lt;/p&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#setup-es&quot;&gt;Setup ES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#install-kibana&quot;&gt;Install Kibana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#configure-permissions--run-local-cluster-using-username-and-password-authentication-&quot;&gt;Configure permissions (run local cluster using username and password authentication)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#appendix&quot;&gt;Appendix&lt;/a&gt;&lt;!-- TOC --&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;p&gt;To support the new features, we have added ES nodes. You can configure ES as a single node or cluster depending on the data situation and status; enable Xpack, enable permission authentication (requires Kibana installation).&lt;br&gt;The official documentation Set up Elasticsearch has installation instructions for each OS, &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/7.3/install-elasticsearch.html&quot;&gt;Installing Elasticsearch&lt;/a&gt; page provides links to instructions for various installation packages, which can be consulted. This document provides instructions for installing ES and Kibana on a single-node Linux server.&lt;br&gt;
    
    </summary>
    
      <category term="Technology" scheme="https://bobotheknight.github.io/categories/Technology/"/>
    
      <category term="OPS" scheme="https://bobotheknight.github.io/categories/Technology/OPS/"/>
    
    
      <category term="ElasticSearch" scheme="https://bobotheknight.github.io/tags/ElasticSearch/"/>
    
      <category term="Kibana" scheme="https://bobotheknight.github.io/tags/Kibana/"/>
    
      <category term="OPS" scheme="https://bobotheknight.github.io/tags/OPS/"/>
    
      <category term="Cluster" scheme="https://bobotheknight.github.io/tags/Cluster/"/>
    
      <category term="Deploy" scheme="https://bobotheknight.github.io/tags/Deploy/"/>
    
  </entry>
  
</feed>
